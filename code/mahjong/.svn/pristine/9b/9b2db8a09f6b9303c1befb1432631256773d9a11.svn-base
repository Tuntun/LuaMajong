逻辑放在服务端运行
去除所有全局变量

牌结构：
个位：数值
十位：牌型
    1：万（1-9）
    2：条（1-9）
    3：饼（1-9）
    4：风牌（1-东、3-南、5-西、7-北）
    5：箭牌（1-中、3-发、5-白）
    （风箭牌用奇数为了避免组成顺子）
百位：牌组标志
    Pai_My		=0		--手牌组
    Pai_Chi		=1		--吃牌组
    Pai_Peng		=2		--碰牌组
    Pai_Gang		=3		--杠牌组
    Pai_Ting		=4      --听牌组



三、主要函数（非局部）

1.判断吃碰杠听胡（CheckAll）
（函数内临时分组，返回是否吃碰杠听胡和可操作table）
    一、传入参数：
    1.用户所有牌
    2.要检验的牌
    3.检验牌的从属（ 0:自摸 1:上家 2: 其他） 


    用户的所有牌和上家牌由服务端指定，作为参数传入lua

    二、返回值：
    1.一个table
    举例：	attribute = {
                        ["Peng"] = {},--填每组能碰的牌，用表表示，以1开始，如第三第四张能碰，则填“{3,4}”
                 		["Chi"]  = {},--填每组能吃的牌，同上
                 		["Gang"] = {},--同上，填个三个数，如{7,8,9}
                		["Ting"] = {},--填可以扔掉的牌，一位数，如{9}
                		["Hu"]	 = 0  --0表示不能胡，1表示能胡
			    }

细分：
2.吃---CheckChiPai(userPai,prePai)
    IN:用户牌，上家牌
    OUT：一个attribute，表示attribute["Chi"]
3.碰---CheckPengPai(userPai,prePai)
    IN:用户牌，其他人打的牌
    OUT：一个attribute，表示attribute["Peng"]
4.杠---CheckGangPai(userPai,prePai,isNotZiMo)
    IN:用户牌，某张牌，指示是否是自摸牌(自摸牌用于加杠)
    OUT：一个attribute，表示attribute["Gang"]
5.胡CheckHu(userPai,zimoPai)
    IN:用户牌，自摸牌
    OUT：true-胡，false-不能胡

6.计算番数--CheckHuScore(userPai)
（函数内临时分组）
    一、传入参数
    1.用户所有牌(包括自摸)
    
    二、返回值：
    番数类型（可能是多返回值，待定……）